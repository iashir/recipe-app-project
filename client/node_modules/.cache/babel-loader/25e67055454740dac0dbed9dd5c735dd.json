{"ast":null,"code":"var _jsxFileName = \"/Users/iashir/Desktop/WorkProjects/Recipe/client/src/components/common/subscribe.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { isAuthenticated } from \"../helper/auth\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nlet userFromId;\n\nif (isAuthenticated()) {\n  const {\n    _id\n  } = JSON.parse(localStorage.getItem(\"user\"));\n  userFromId = _id;\n}\n\nconst Subscribe = props => {\n  let [subscribeVariables, setSubscribeVariables] = useState({\n    userTo: \"\",\n    userFrom: \"\"\n  });\n  let [subscribed, setSubscribed] = useState(\"\");\n  useEffect(() => {\n    console.log(props.userId);\n\n    if (isAuthenticated()) {\n      setSubscribeVariables({\n        userTo: props.userId,\n        userFrom: userFromId\n      });\n      axios.post(\"/api/subscribe/subscribed\", {\n        userTo: props.userId,\n        userFrom: userFromId\n      }).then(response => {\n        if (response.data.success) {\n          setSubscribed(response.data.subscribed);\n        } else {\n          toast.error(\"Failed to get Subscribed Information\");\n        }\n      });\n    }\n  }, [props.userId]);\n\n  const handleSubscribe = () => {\n    if (!isAuthenticated()) {\n      return toast.error(\"Please login\");\n    }\n\n    if (subscribed) {\n      axios.post(\"/api/subscribe/unfollow\", subscribeVariables).then(res => {\n        if (res.data.success) {\n          setSubscribed(!subscribed);\n          props.onFollowersUpdate();\n        } else {\n          toast.error(\"Failed to Unsubscribe\");\n        }\n      });\n    } else {\n      axios.post(\"/api/subscribe/follow\", subscribeVariables).then(res => {\n        if (res.data.success) {\n          setSubscribed(!subscribed);\n          props.onFollowersUpdate();\n        } else {\n          toast.error(\"Failed to Subscribe\");\n        }\n      });\n    }\n  };\n\n  if (!isAuthenticated()) {\n    return null;\n  } else {\n    if (userFromId === props.userId) {\n      return null;\n    } else {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: handleSubscribe,\n        className: subscribed ? \"btn grey\" : \"btn deep-orange\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, subscribed ? \"Subscribed\" : \"Subscribe\");\n    }\n  }\n};\n\nexport default Subscribe;","map":{"version":3,"sources":["/Users/iashir/Desktop/WorkProjects/Recipe/client/src/components/common/subscribe.jsx"],"names":["React","useState","useEffect","isAuthenticated","axios","toast","userFromId","_id","JSON","parse","localStorage","getItem","Subscribe","props","subscribeVariables","setSubscribeVariables","userTo","userFrom","subscribed","setSubscribed","console","log","userId","post","then","response","data","success","error","handleSubscribe","res","onFollowersUpdate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { isAuthenticated } from \"../helper/auth\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nlet userFromId;\nif (isAuthenticated()) {\n  const { _id } = JSON.parse(localStorage.getItem(\"user\"));\n  userFromId = _id;\n}\n\nconst Subscribe = (props) => {\n  let [subscribeVariables, setSubscribeVariables] = useState({\n    userTo: \"\",\n    userFrom: \"\",\n  });\n  let [subscribed, setSubscribed] = useState(\"\");\n  useEffect(() => {\n    console.log(props.userId);\n    if (isAuthenticated()) {\n      setSubscribeVariables({ userTo: props.userId, userFrom: userFromId });\n      axios\n        .post(\"/api/subscribe/subscribed\", {\n          userTo: props.userId,\n          userFrom: userFromId,\n        })\n        .then((response) => {\n          if (response.data.success) {\n            setSubscribed(response.data.subscribed);\n          } else {\n            toast.error(\"Failed to get Subscribed Information\");\n          }\n        });\n    }\n  }, [props.userId]);\n\n  const handleSubscribe = () => {\n    if (!isAuthenticated()) {\n      return toast.error(\"Please login\");\n    }\n    if (subscribed) {\n      axios.post(\"/api/subscribe/unfollow\", subscribeVariables).then((res) => {\n        if (res.data.success) {\n          setSubscribed(!subscribed);\n          props.onFollowersUpdate();\n        } else {\n          toast.error(\"Failed to Unsubscribe\");\n        }\n      });\n    } else {\n      axios.post(\"/api/subscribe/follow\", subscribeVariables).then((res) => {\n        if (res.data.success) {\n          setSubscribed(!subscribed);\n          props.onFollowersUpdate();\n        } else {\n          toast.error(\"Failed to Subscribe\");\n        }\n      });\n    }\n  };\n\n  if (!isAuthenticated()) {\n    return null;\n  } else {\n    if (userFromId === props.userId) {\n      return null;\n    } else {\n      return (\n        <button\n          onClick={handleSubscribe}\n          className={subscribed ? \"btn grey\" : \"btn deep-orange\"}\n        >\n          {subscribed ? \"Subscribed\" : \"Subscribe\"}\n        </button>\n      );\n    }\n  }\n};\n\nexport default Subscribe;\n"]},"metadata":{},"sourceType":"module"}