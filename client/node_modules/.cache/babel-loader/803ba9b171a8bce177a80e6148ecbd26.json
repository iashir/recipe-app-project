{"ast":null,"code":"var _jsxFileName = \"/Users/iashir/Desktop/WorkProjects/Recipe/client/src/components/admin/editRecipe.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport classnames from \"classnames\";\nimport Validator from \"validator\";\nimport M from \"materialize-css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport { toast } from \"react-toastify\";\nimport { showLoading } from \"../helper/loading\";\n\nclass AddRecipe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      _id: \"\",\n      title: \"\",\n      body: \"\",\n      status: \"\",\n      recipeImageName: \"\",\n      recipeImageLocation: \"\",\n      recipeImage: null,\n      oldRecipeImage: true,\n      user: {},\n      errors: {},\n      loading: false\n    };\n\n    this.componentDidMount = () => {\n      const {\n        _id\n      } = JSON.parse(localStorage.user);\n      this.setState({\n        user: _id\n      });\n      const params = this.props.match.params.id;\n      axios.get(\"/api/recipes/\" + params).then(({\n        data\n      }) => {\n        const {\n          title,\n          body,\n          status,\n          recipeImageName,\n          recipeImageLocation,\n          _id\n        } = data;\n        this.setState({\n          title,\n          body,\n          status,\n          recipeImageName,\n          recipeImageLocation,\n          _id\n        });\n      });\n      var select = document.querySelectorAll(\"select\");\n      M.FormSelect.init(select);\n    };\n\n    this.handleChange = event => {\n      if (event.target.id === \"recipeImage\") {\n        this.setState({\n          recipeImage: event.target.files[0],\n          oldRecipeImage: false\n        });\n      } else {\n        this.setState({\n          [event.target.id]: event.target.value\n        });\n        this.validateForm(event.target.id, event.target.value);\n      }\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const {\n        title,\n        body,\n        status,\n        user,\n        recipeImage,\n        _id,\n        oldRecipeImage\n      } = this.state;\n\n      if (!oldRecipeImage) {\n        console.log(\"WITH IMAGE\");\n        let formData = new FormData();\n        formData.append(\"recipeImage\", recipeImage, recipeImage.name);\n        formData.append(\"title\", title);\n        formData.append(\"status\", status);\n        formData.append(\"user\", user);\n        formData.append(\"body\", body);\n        console.log(formData);\n        await axios.put(\"/api/recipes/\" + _id, formData, {\n          headers: {\n            accept: \"application/json\",\n            \"Accept-Language\": \"en-US,en;q=0.8\",\n            \"Content-Type\": `multipart/form-data; boundary=${formData._boundary}`\n          }\n        }).then(data => {\n          toast.success(`success`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          this.props.history.push(\"/recipes\");\n        }).catch(error => {\n          if (\"LIMIT_FILE_SIZE\" === error.code) {\n            this.setState({\n              errors: \"Max size 5MB\"\n            });\n          } else {\n            this.setState({\n              errors: error.response.data\n            });\n          }\n        });\n      } else {\n        console.log(\"NO IMAGE\");\n        const obj = {\n          title,\n          body,\n          status,\n          user,\n          _id\n        };\n        await axios.put(\"/api/recipes/\" + _id, obj).then(data => {\n          toast.success(`success`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          this.props.history.push(\"/recipes/\" + _id);\n        }).catch(err => this.setState({\n          errors: err.response.data\n        }));\n      }\n    };\n  }\n\n  validateForm(fieldName, value) {\n    const {\n      errors\n    } = this.state;\n\n    switch (fieldName) {\n      case \"title\":\n        if (Validator.isEmpty(value)) {\n          errors.title = \"Title field is required\";\n          break;\n        }\n\n        errors.title = \"\";\n        break;\n\n      case \"body\":\n        if (Validator.isEmpty(value)) {\n          errors.body = \"Description field is required\";\n          break;\n        }\n\n        errors.body = \"\";\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      title,\n      body,\n      errors,\n      status,\n      loading,\n      recipeImageName\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, loading ? showLoading() : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, \"Add Recipe\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-field input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, \"Select\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"recipeImage\",\n      onChange: this.handleChange,\n      type: \"file\",\n      id: \"recipeImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-path-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Recipe image(must be less than 5MB)\",\n      defaultValue: recipeImageName,\n      className: classnames(\"file-path \", {\n        invalid: errors.recipeImage\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, errors.recipeImage)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: title,\n      onChange: this.handleChange,\n      type: \"text\",\n      id: \"title\",\n      className: classnames(\"\", {\n        invalid: errors.title\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }\n    }, \"Title\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: body,\n      onChange: this.handleChange,\n      id: \"body\",\n      className: classnames(\"materialize-textarea\", {\n        invalid: errors.body\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 23\n      }\n    }, errors.body))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"status\",\n      onChange: this.handleChange,\n      className: classnames(\"\", {\n        invalid: errors.status\n      }),\n      value: status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"public\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, \"Public\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"private\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }, \"Private\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 23\n      }\n    }, \"Choose status of your recipe\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 23\n      }\n    }, errors.status))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Save\",\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/recipes\",\n      className: \"btn orange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, \"Cancel\"))))))));\n  }\n\n}\n\nexport default AddRecipe;","map":{"version":3,"sources":["/Users/iashir/Desktop/WorkProjects/Recipe/client/src/components/admin/editRecipe.jsx"],"names":["React","Component","Link","axios","classnames","Validator","M","toast","showLoading","AddRecipe","state","_id","title","body","status","recipeImageName","recipeImageLocation","recipeImage","oldRecipeImage","user","errors","loading","componentDidMount","JSON","parse","localStorage","setState","params","props","match","id","get","then","data","select","document","querySelectorAll","FormSelect","init","handleChange","event","target","files","value","validateForm","handleSubmit","preventDefault","console","log","formData","FormData","append","name","put","headers","accept","_boundary","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","history","push","catch","error","code","response","obj","err","fieldName","isEmpty","render","invalid"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport classnames from \"classnames\";\nimport Validator from \"validator\";\nimport M from \"materialize-css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport { toast } from \"react-toastify\";\nimport { showLoading } from \"../helper/loading\";\nclass AddRecipe extends Component {\n  state = {\n    _id: \"\",\n    title: \"\",\n    body: \"\",\n    status: \"\",\n    recipeImageName: \"\",\n    recipeImageLocation: \"\",\n    recipeImage: null,\n    oldRecipeImage: true,\n    user: {},\n    errors: {},\n    loading: false,\n  };\n  componentDidMount = () => {\n    const { _id } = JSON.parse(localStorage.user);\n    this.setState({ user: _id });\n    const params = this.props.match.params.id;\n    axios.get(\"/api/recipes/\" + params).then(({ data }) => {\n      const {\n        title,\n        body,\n        status,\n        recipeImageName,\n        recipeImageLocation,\n        _id,\n      } = data;\n      this.setState({\n        title,\n        body,\n        status,\n        recipeImageName,\n        recipeImageLocation,\n        _id,\n      });\n    });\n    var select = document.querySelectorAll(\"select\");\n    M.FormSelect.init(select);\n  };\n\n  handleChange = (event) => {\n    if (event.target.id === \"recipeImage\") {\n      this.setState({\n        recipeImage: event.target.files[0],\n        oldRecipeImage: false,\n      });\n    } else {\n      this.setState({ [event.target.id]: event.target.value });\n      this.validateForm(event.target.id, event.target.value);\n    }\n  };\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const {\n      title,\n      body,\n      status,\n      user,\n      recipeImage,\n      _id,\n      oldRecipeImage,\n    } = this.state;\n    if (!oldRecipeImage) {\n      console.log(\"WITH IMAGE\");\n      let formData = new FormData();\n      formData.append(\"recipeImage\", recipeImage, recipeImage.name);\n      formData.append(\"title\", title);\n      formData.append(\"status\", status);\n      formData.append(\"user\", user);\n      formData.append(\"body\", body);\n      console.log(formData);\n\n      await axios\n        .put(\"/api/recipes/\" + _id, formData, {\n          headers: {\n            accept: \"application/json\",\n            \"Accept-Language\": \"en-US,en;q=0.8\",\n            \"Content-Type\": `multipart/form-data; boundary=${formData._boundary}`,\n          },\n        })\n        .then((data) => {\n          toast.success(`success`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n          this.props.history.push(\"/recipes\");\n        })\n        .catch((error) => {\n          if (\"LIMIT_FILE_SIZE\" === error.code) {\n            this.setState({ errors: \"Max size 5MB\" });\n          } else {\n            this.setState({ errors: error.response.data });\n          }\n        });\n    } else {\n      console.log(\"NO IMAGE\");\n\n      const obj = {\n        title,\n        body,\n        status,\n        user,\n        _id,\n      };\n      await axios\n        .put(\"/api/recipes/\" + _id, obj)\n        .then((data) => {\n          toast.success(`success`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n          this.props.history.push(\"/recipes/\" + _id);\n        })\n        .catch((err) => this.setState({ errors: err.response.data }));\n    }\n  };\n  validateForm(fieldName, value) {\n    const { errors } = this.state;\n    switch (fieldName) {\n      case \"title\":\n        if (Validator.isEmpty(value)) {\n          errors.title = \"Title field is required\";\n          break;\n        }\n        errors.title = \"\";\n        break;\n      case \"body\":\n        if (Validator.isEmpty(value)) {\n          errors.body = \"Description field is required\";\n          break;\n        }\n        errors.body = \"\";\n        break;\n      default:\n        break;\n    }\n  }\n  render() {\n    const {\n      title,\n      body,\n      errors,\n      status,\n      loading,\n      recipeImageName,\n    } = this.state;\n    return (\n      <React.Fragment>\n        {loading ? showLoading() : null}\n        <div className=\"container\">\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <h3>Add Recipe</h3>\n              <div className=\"row\">\n                <form\n                  onSubmit={this.handleSubmit}\n                  noValidate\n                  encType=\"multipart/form-data\"\n                >\n                  <div className=\"row\">\n                    <div className=\"file-field input-field\">\n                      <div className=\"btn\">\n                        <span>Select</span>\n                        <input\n                          name=\"recipeImage\"\n                          onChange={this.handleChange}\n                          type=\"file\"\n                          id=\"recipeImage\"\n                        />\n                      </div>\n                      <div className=\"file-path-wrapper\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Recipe image(must be less than 5MB)\"\n                          defaultValue={recipeImageName}\n                          className={classnames(\"file-path \", {\n                            invalid: errors.recipeImage,\n                          })}\n                        />\n                        <span className=\"red-text\">{errors.recipeImage}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <input\n                        value={title}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                        id=\"title\"\n                        className={classnames(\"\", {\n                          invalid: errors.title,\n                        })}\n                      />\n                      <label className=\"active\" htmlFor=\"title\">\n                        Title\n                      </label>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <textarea\n                        value={body}\n                        onChange={this.handleChange}\n                        id=\"body\"\n                        className={classnames(\"materialize-textarea\", {\n                          invalid: errors.body,\n                        })}\n                      ></textarea>\n                      <label className=\"active\" htmlFor=\"body\">\n                        Description\n                      </label>\n                      <span className=\"red-text\">{errors.body}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <select\n                        id=\"status\"\n                        onChange={this.handleChange}\n                        className={classnames(\"\", {\n                          invalid: errors.status,\n                        })}\n                        value={status}\n                      >\n                        <option value=\"public\">Public</option>\n                        <option value=\"private\">Private</option>\n                      </select>\n                      <label htmlFor=\"status\">\n                        Choose status of your recipe\n                      </label>\n                      <span className=\"red-text\">{errors.status}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <input type=\"submit\" value=\"Save\" className=\"btn\" />\n                    <Link to=\"/recipes\" className=\"btn orange\">\n                      Cancel\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddRecipe;\n"]},"metadata":{},"sourceType":"module"}