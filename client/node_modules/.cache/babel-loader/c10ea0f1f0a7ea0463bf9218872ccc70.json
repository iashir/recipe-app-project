{"ast":null,"code":"var _jsxFileName = \"/Users/iashir/Desktop/WorkProjects/Recipe/client/src/components/editRecipe.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport classnames from \"classnames\";\nimport Validator from \"validator\";\nimport M from \"materialize-css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport { toast } from \"react-toastify\";\nimport { showLoading } from \"./helper/loading\";\n\nclass EditRecipe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      _id: \"\",\n      title: \"\",\n      body: \"\",\n      status: \"\",\n      category: \"\",\n      recipeImageName: \"\",\n      recipeImageLocation: \"\",\n      recipeImage: null,\n      oldRecipeImage: true,\n      categories: [],\n      user: {},\n      errors: {},\n      loading: false\n    };\n\n    this.componentDidMount = () => {\n      const {\n        _id\n      } = JSON.parse(localStorage.user);\n      this.setState({\n        user: _id,\n        loading: true\n      });\n      const params = this.props.match.params.id;\n      axios.get(\"/api/categories\").then(({\n        data: categories\n      }) => {\n        this.setState({\n          categories\n        });\n      });\n      axios.get(\"/api/recipes/\" + params).then(({\n        data\n      }) => {\n        const {\n          title,\n          body,\n          status,\n          recipeImageName,\n          recipeImageLocation,\n          _id,\n          category\n        } = data;\n        this.setState({\n          title,\n          body,\n          category,\n          recipeImageName,\n          recipeImageLocation,\n          _id,\n          status,\n          loading: false\n        });\n        M.AutoInit();\n      });\n    };\n\n    this.handleChange = event => {\n      if (event.target.id === \"recipeImage\") {\n        this.setState({\n          recipeImage: event.target.files[0],\n          oldRecipeImage: false\n        });\n      } else {\n        this.setState({\n          [event.target.id]: event.target.value\n        });\n        this.validateForm(event.target.id, event.target.value);\n      }\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const {\n        title,\n        body,\n        status,\n        user,\n        recipeImage,\n        _id,\n        oldRecipeImage,\n        category\n      } = this.state;\n\n      if (!oldRecipeImage) {\n        console.log(\"WITH IMAGE\");\n        let formData = new FormData();\n        formData.append(\"recipeImage\", recipeImage, recipeImage.name);\n        formData.append(\"title\", title);\n        formData.append(\"status\", status);\n        formData.append(\"category\", category);\n        formData.append(\"user\", user);\n        formData.append(\"body\", body);\n        console.log(formData);\n        await axios.put(\"/api/recipes/\" + _id, formData, {\n          headers: {\n            accept: \"application/json\",\n            \"Accept-Language\": \"en-US,en;q=0.8\",\n            \"Content-Type\": `multipart/form-data; boundary=${formData._boundary}`\n          }\n        }).then(data => {\n          toast.success(`success`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          this.props.history.push(\"/recipes\");\n        }).catch(error => {\n          if (\"LIMIT_FILE_SIZE\" === error.code) {\n            this.setState({\n              errors: \"Max size 5MB\"\n            });\n          } else {\n            this.setState({\n              errors: error.response.data\n            });\n          }\n        });\n      } else {\n        const obj = {\n          title,\n          body,\n          status,\n          user,\n          _id,\n          category\n        };\n        await axios.put(\"/api/recipes/\" + _id, obj).then(data => {\n          toast.success(`success`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          this.props.history.push(\"/recipes/\" + _id);\n        }).catch(err => this.setState({\n          errors: err.response.data\n        }));\n      }\n    };\n  }\n\n  validateForm(fieldName, value) {\n    const {\n      errors\n    } = this.state;\n\n    switch (fieldName) {\n      case \"title\":\n        if (Validator.isEmpty(value)) {\n          errors.title = \"Title field is required\";\n          break;\n        }\n\n        errors.title = \"\";\n        break;\n\n      case \"body\":\n        if (Validator.isEmpty(value)) {\n          errors.body = \"Description field is required\";\n          break;\n        }\n\n        errors.body = \"\";\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      title,\n      body,\n      errors,\n      status,\n      loading,\n      recipeImageName,\n      categories,\n      category\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, loading ? showLoading() : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-field input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, \"Select\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"recipeImage\",\n      onChange: this.handleChange,\n      type: \"file\",\n      id: \"recipeImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-path-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Recipe image(must be less than 5MB)\",\n      defaultValue: recipeImageName,\n      className: classnames(\"file-path \", {\n        invalid: errors.recipeImage\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, errors.recipeImage)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: title,\n      onChange: this.handleChange,\n      type: \"text\",\n      id: \"title\",\n      className: classnames(\"\", {\n        invalid: errors.title\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 23\n      }\n    }, \"Title\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"category\",\n      onChange: this.handleChange,\n      value: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    }, categories.map(data => /*#__PURE__*/React.createElement(\"option\", {\n      value: data._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 27\n      }\n    }, data.type))), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 23\n      }\n    }, \"Choose category\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"status\",\n      onChange: this.handleChange,\n      value: status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"public\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, \"Public\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"private\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, \"Private\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 23\n      }\n    }, \"Choose status of your recipe\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: body,\n      onChange: this.handleChange,\n      id: \"body\",\n      className: classnames(\"materialize-textarea\", {\n        invalid: errors.body\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 23\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 23\n      }\n    }, errors.body))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Save\",\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/recipes\",\n      className: \"btn orange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, \"Cancel\"))))))));\n  }\n\n}\n\nexport default EditRecipe;","map":{"version":3,"sources":["/Users/iashir/Desktop/WorkProjects/Recipe/client/src/components/editRecipe.jsx"],"names":["React","Component","Link","axios","classnames","Validator","M","toast","showLoading","EditRecipe","state","_id","title","body","status","category","recipeImageName","recipeImageLocation","recipeImage","oldRecipeImage","categories","user","errors","loading","componentDidMount","JSON","parse","localStorage","setState","params","props","match","id","get","then","data","AutoInit","handleChange","event","target","files","value","validateForm","handleSubmit","preventDefault","console","log","formData","FormData","append","name","put","headers","accept","_boundary","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","history","push","catch","error","code","response","obj","err","fieldName","isEmpty","render","invalid","map","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport classnames from \"classnames\";\nimport Validator from \"validator\";\nimport M from \"materialize-css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport { toast } from \"react-toastify\";\nimport { showLoading } from \"./helper/loading\";\nclass EditRecipe extends Component {\n  state = {\n    _id: \"\",\n    title: \"\",\n    body: \"\",\n    status: \"\",\n    category: \"\",\n    recipeImageName: \"\",\n    recipeImageLocation: \"\",\n    recipeImage: null,\n    oldRecipeImage: true,\n    categories: [],\n    user: {},\n    errors: {},\n    loading: false,\n  };\n  componentDidMount = () => {\n    const { _id } = JSON.parse(localStorage.user);\n\n    this.setState({ user: _id, loading: true });\n    const params = this.props.match.params.id;\n    axios.get(\"/api/categories\").then(({ data: categories }) => {\n      this.setState({\n        categories,\n      });\n    });\n    axios.get(\"/api/recipes/\" + params).then(({ data }) => {\n      const {\n        title,\n        body,\n        status,\n        recipeImageName,\n        recipeImageLocation,\n        _id,\n        category,\n      } = data;\n      this.setState({\n        title,\n        body,\n        category,\n        recipeImageName,\n        recipeImageLocation,\n        _id,\n        status,\n        loading: false,\n      });\n      M.AutoInit();\n    });\n  };\n\n  handleChange = (event) => {\n    if (event.target.id === \"recipeImage\") {\n      this.setState({\n        recipeImage: event.target.files[0],\n        oldRecipeImage: false,\n      });\n    } else {\n      this.setState({ [event.target.id]: event.target.value });\n      this.validateForm(event.target.id, event.target.value);\n    }\n  };\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const {\n      title,\n      body,\n      status,\n      user,\n      recipeImage,\n      _id,\n      oldRecipeImage,\n      category,\n    } = this.state;\n    if (!oldRecipeImage) {\n      console.log(\"WITH IMAGE\");\n      let formData = new FormData();\n      formData.append(\"recipeImage\", recipeImage, recipeImage.name);\n      formData.append(\"title\", title);\n      formData.append(\"status\", status);\n      formData.append(\"category\", category);\n      formData.append(\"user\", user);\n      formData.append(\"body\", body);\n      console.log(formData);\n\n      await axios\n        .put(\"/api/recipes/\" + _id, formData, {\n          headers: {\n            accept: \"application/json\",\n            \"Accept-Language\": \"en-US,en;q=0.8\",\n            \"Content-Type\": `multipart/form-data; boundary=${formData._boundary}`,\n          },\n        })\n        .then((data) => {\n          toast.success(`success`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n          this.props.history.push(\"/recipes\");\n        })\n        .catch((error) => {\n          if (\"LIMIT_FILE_SIZE\" === error.code) {\n            this.setState({ errors: \"Max size 5MB\" });\n          } else {\n            this.setState({ errors: error.response.data });\n          }\n        });\n    } else {\n      const obj = {\n        title,\n        body,\n        status,\n        user,\n        _id,\n        category,\n      };\n      await axios\n        .put(\"/api/recipes/\" + _id, obj)\n        .then((data) => {\n          toast.success(`success`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n          this.props.history.push(\"/recipes/\" + _id);\n        })\n        .catch((err) => this.setState({ errors: err.response.data }));\n    }\n  };\n  validateForm(fieldName, value) {\n    const { errors } = this.state;\n    switch (fieldName) {\n      case \"title\":\n        if (Validator.isEmpty(value)) {\n          errors.title = \"Title field is required\";\n          break;\n        }\n        errors.title = \"\";\n        break;\n      case \"body\":\n        if (Validator.isEmpty(value)) {\n          errors.body = \"Description field is required\";\n          break;\n        }\n        errors.body = \"\";\n        break;\n      default:\n        break;\n    }\n  }\n  render() {\n    const {\n      title,\n      body,\n      errors,\n      status,\n      loading,\n      recipeImageName,\n      categories,\n      category,\n    } = this.state;\n    return (\n      <React.Fragment>\n        {loading ? showLoading() : null}\n        <div className=\"container\">\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"row\">\n                <form\n                  onSubmit={this.handleSubmit}\n                  noValidate\n                  encType=\"multipart/form-data\"\n                >\n                  <div className=\"row\">\n                    <div className=\"file-field input-field\">\n                      <div className=\"btn\">\n                        <span>Select</span>\n                        <input\n                          name=\"recipeImage\"\n                          onChange={this.handleChange}\n                          type=\"file\"\n                          id=\"recipeImage\"\n                        />\n                      </div>\n                      <div className=\"file-path-wrapper\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Recipe image(must be less than 5MB)\"\n                          defaultValue={recipeImageName}\n                          className={classnames(\"file-path \", {\n                            invalid: errors.recipeImage,\n                          })}\n                        />\n                        <span className=\"red-text\">{errors.recipeImage}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <input\n                        value={title}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                        id=\"title\"\n                        className={classnames(\"\", {\n                          invalid: errors.title,\n                        })}\n                      />\n                      <label className=\"active\" htmlFor=\"title\">\n                        Title\n                      </label>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <select\n                        id=\"category\"\n                        onChange={this.handleChange}\n                        value={category}\n                      >\n                        {categories.map((data) => (\n                          <option value={data._id}>{data.type}</option>\n                        ))}\n                      </select>\n                      <label>Choose category</label>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <select\n                        id=\"status\"\n                        onChange={this.handleChange}\n                        value={status}\n                      >\n                        <option value=\"public\">Public</option>\n                        <option value=\"private\">Private</option>\n                      </select>\n                      <label htmlFor=\"status\">\n                        Choose status of your recipe\n                      </label>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <textarea\n                        value={body}\n                        onChange={this.handleChange}\n                        id=\"body\"\n                        className={classnames(\"materialize-textarea\", {\n                          invalid: errors.body,\n                        })}\n                      ></textarea>\n                      <label className=\"active\" htmlFor=\"body\">\n                        Description\n                      </label>\n                      <span className=\"red-text\">{errors.body}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <input type=\"submit\" value=\"Save\" className=\"btn\" />\n                    <Link to=\"/recipes\" className=\"btn orange\">\n                      Cancel\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EditRecipe;\n"]},"metadata":{},"sourceType":"module"}