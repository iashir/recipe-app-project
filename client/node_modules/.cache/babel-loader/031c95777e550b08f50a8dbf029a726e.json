{"ast":null,"code":"var _jsxFileName = \"/Users/iashir/Desktop/WorkProjects/Recipe/client/src/components/addRecipe.jsx\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport classnames from \"classnames\";\nimport Validator from \"validator\";\nimport M from \"materialize-css\";\nimport { toast } from \"react-toastify\";\nimport { showLoading } from \"./helper/loading\";\n\nclass AddRecipe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      body: \"\",\n      i: \"\",\n      category: \"\",\n      status: \"\",\n      user: {},\n      errors: {},\n      categories: [],\n      loading: false,\n      recipeImage: null\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        _id\n      } = JSON.parse(localStorage.user);\n      axios.get(\"/api/categories\").then(({\n        data: categories\n      }) => {\n        this.setState({\n          user: _id,\n          status: \"public\",\n          categories,\n          category: categories[0]._id,\n          loading: false\n        });\n        M.AutoInit();\n      });\n    };\n\n    this.handleChange = event => {\n      if (event.target.id === \"recipeImage\") {\n        this.setState({\n          recipeImage: event.target.files[0]\n        });\n      } else {\n        this.setState({\n          [event.target.id]: event.target.value\n        });\n        this.validateForm(event.target.id, event.target.value);\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const {\n        title,\n        body,\n        status,\n        user,\n        recipeImage,\n        category\n      } = this.state;\n\n      if (recipeImage) {\n        console.log(this.state);\n        let formData = new FormData();\n        formData.append(\"recipeImage\", recipeImage, recipeImage.name);\n        formData.append(\"title\", title);\n        formData.append(\"status\", status);\n        formData.append(\"category\", category);\n        formData.append(\"user\", user);\n        formData.append(\"body\", body.trim());\n        axios.post(\"/api/recipes/add\", formData, {\n          headers: {\n            accept: \"application/json\",\n            \"Accept-Language\": \"en-US,en;q=0.8\",\n            \"Content-Type\": `multipart/form-data; boundary=${formData._boundary}`\n          }\n        }).then(response => {\n          toast.success(`success, ${response.data} created`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          this.props.history.push(\"/my-recipes\");\n        }).catch(error => {\n          this.setState({\n            errors: error.response.data,\n            loading: false\n          });\n        });\n      } else {\n        this.setState({\n          errors: {\n            recipeImage: \"No file selected\"\n          },\n          loading: false\n        });\n      }\n    };\n  }\n\n  validateForm(fieldName, value) {\n    const {\n      errors\n    } = this.state;\n\n    switch (fieldName) {\n      case \"title\":\n        if (Validator.isEmpty(value)) {\n          errors.title = \"Title field is required\";\n          break;\n        }\n\n        errors.title = \"\";\n        break;\n\n      case \"body\":\n        if (Validator.isEmpty(value)) {\n          errors.body = \"Description field is required\";\n          break;\n        }\n\n        errors.body = \"\";\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      title,\n      body,\n      errors,\n      status,\n      loading,\n      categories,\n      category\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, loading ? showLoading() : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-field input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \"Select\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"recipeImage\",\n      onChange: this.handleChange,\n      type: \"file\",\n      id: \"recipeImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-path-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Recipe image(must be less than 5MB)\",\n      className: classnames(\"file-path \", {\n        invalid: errors.recipeImage\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, errors.recipeImage)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: title,\n      onChange: this.handleChange,\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      className: classnames(\"\", {\n        invalid: errors.title\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 23\n      }\n    }, errors.title))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"category\",\n      id: \"category\",\n      onChange: this.handleChange,\n      value: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    }, categories.map(data => /*#__PURE__*/React.createElement(\"option\", {\n      key: data._id,\n      value: data._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 27\n      }\n    }, data.type))), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 23\n      }\n    }, \"Choose category\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"status\",\n      id: \"status\",\n      onChange: this.handleChange,\n      className: classnames(\"\", {\n        invalid: errors.status\n      }),\n      value: status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"public\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, \"Public\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"private\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, \"Private\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 23\n      }\n    }, \"Choose status of your recipe\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 23\n      }\n    }, errors.status))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: body,\n      onChange: this.handleChange,\n      id: \"body\",\n      name: \"body\",\n      className: classnames(\"materialize-textarea\", {\n        invalid: errors.body\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 23\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 23\n      }\n    }, errors.body))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Save\",\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/recipes\",\n      className: \"btn orange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, \"Cancel\"))))))));\n  }\n\n}\n\nexport default withRouter(AddRecipe);","map":{"version":3,"sources":["/Users/iashir/Desktop/WorkProjects/Recipe/client/src/components/addRecipe.jsx"],"names":["React","Component","Link","withRouter","axios","classnames","Validator","M","toast","showLoading","AddRecipe","state","title","body","i","category","status","user","errors","categories","loading","recipeImage","componentDidMount","setState","_id","JSON","parse","localStorage","get","then","data","AutoInit","handleChange","event","target","id","files","value","validateForm","handleSubmit","preventDefault","console","log","formData","FormData","append","name","trim","post","headers","accept","_boundary","response","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","props","history","push","catch","error","fieldName","isEmpty","render","invalid","map","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport classnames from \"classnames\";\nimport Validator from \"validator\";\nimport M from \"materialize-css\";\nimport { toast } from \"react-toastify\";\nimport { showLoading } from \"./helper/loading\";\n\nclass AddRecipe extends Component {\n  state = {\n    title: \"\",\n    body: \"\",\n    i: \"\",\n    category: \"\",\n    status: \"\",\n    user: {},\n    errors: {},\n    categories: [],\n    loading: false,\n    recipeImage: null,\n  };\n  componentDidMount = () => {\n    this.setState({ loading: true });\n    const { _id } = JSON.parse(localStorage.user);\n    axios.get(\"/api/categories\").then(({ data: categories }) => {\n      this.setState({\n        user: _id,\n        status: \"public\",\n        categories,\n        category: categories[0]._id,\n        loading: false,\n      });\n      M.AutoInit();\n    });\n  };\n\n  handleChange = (event) => {\n    if (event.target.id === \"recipeImage\") {\n      this.setState({\n        recipeImage: event.target.files[0],\n      });\n    } else {\n      this.setState({ [event.target.id]: event.target.value });\n      this.validateForm(event.target.id, event.target.value);\n    }\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const { title, body, status, user, recipeImage, category } = this.state;\n    if (recipeImage) {\n      console.log(this.state);\n      let formData = new FormData();\n      formData.append(\"recipeImage\", recipeImage, recipeImage.name);\n      formData.append(\"title\", title);\n      formData.append(\"status\", status);\n      formData.append(\"category\", category);\n      formData.append(\"user\", user);\n      formData.append(\"body\", body.trim());\n      axios\n        .post(\"/api/recipes/add\", formData, {\n          headers: {\n            accept: \"application/json\",\n            \"Accept-Language\": \"en-US,en;q=0.8\",\n            \"Content-Type\": `multipart/form-data; boundary=${formData._boundary}`,\n          },\n        })\n        .then((response) => {\n          toast.success(`success, ${response.data} created`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n          this.props.history.push(\"/my-recipes\");\n        })\n        .catch((error) => {\n          this.setState({ errors: error.response.data, loading: false });\n        });\n    } else {\n      this.setState({\n        errors: { recipeImage: \"No file selected\" },\n        loading: false,\n      });\n    }\n  };\n  validateForm(fieldName, value) {\n    const { errors } = this.state;\n    switch (fieldName) {\n      case \"title\":\n        if (Validator.isEmpty(value)) {\n          errors.title = \"Title field is required\";\n          break;\n        }\n        errors.title = \"\";\n        break;\n      case \"body\":\n        if (Validator.isEmpty(value)) {\n          errors.body = \"Description field is required\";\n          break;\n        }\n        errors.body = \"\";\n        break;\n      default:\n        break;\n    }\n  }\n  render() {\n    const {\n      title,\n      body,\n      errors,\n      status,\n      loading,\n      categories,\n      category,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        {loading ? showLoading() : null}\n        <div className=\"container\">\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"row\">\n                <form\n                  onSubmit={this.handleSubmit}\n                  noValidate\n                  encType=\"multipart/form-data\"\n                >\n                  <div className=\"row\">\n                    <div className=\"file-field input-field\">\n                      <div className=\"btn\">\n                        <span>Select</span>\n                        <input\n                          name=\"recipeImage\"\n                          onChange={this.handleChange}\n                          type=\"file\"\n                          id=\"recipeImage\"\n                        />\n                      </div>\n                      <div className=\"file-path-wrapper\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Recipe image(must be less than 5MB)\"\n                          className={classnames(\"file-path \", {\n                            invalid: errors.recipeImage,\n                          })}\n                        />\n                        <span className=\"red-text\">{errors.recipeImage}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <input\n                        value={title}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                        id=\"title\"\n                        name=\"title\"\n                        className={classnames(\"\", {\n                          invalid: errors.title,\n                        })}\n                      />\n                      <label htmlFor=\"title\">Title</label>\n                      <span className=\"red-text\">{errors.title}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <select\n                        name=\"category\"\n                        id=\"category\"\n                        onChange={this.handleChange}\n                        value={category}\n                      >\n                        {categories.map((data) => (\n                          <option key={data._id} value={data._id}>\n                            {data.type}\n                          </option>\n                        ))}\n                      </select>\n                      <label>Choose category</label>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <select\n                        name=\"status\"\n                        id=\"status\"\n                        onChange={this.handleChange}\n                        className={classnames(\"\", {\n                          invalid: errors.status,\n                        })}\n                        value={status}\n                      >\n                        <option value=\"public\">Public</option>\n                        <option value=\"private\">Private</option>\n                      </select>\n                      <label htmlFor=\"status\">\n                        Choose status of your recipe\n                      </label>\n                      <span className=\"red-text\">{errors.status}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <textarea\n                        value={body}\n                        onChange={this.handleChange}\n                        id=\"body\"\n                        name=\"body\"\n                        className={classnames(\"materialize-textarea\", {\n                          invalid: errors.body,\n                        })}\n                      ></textarea>\n                      <label htmlFor=\"body\">Description</label>\n                      <span className=\"red-text\">{errors.body}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <input type=\"submit\" value=\"Save\" className=\"btn\" />\n                    <Link to=\"/recipes\" className=\"btn orange\">\n                      Cancel\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(AddRecipe);\n"]},"metadata":{},"sourceType":"module"}