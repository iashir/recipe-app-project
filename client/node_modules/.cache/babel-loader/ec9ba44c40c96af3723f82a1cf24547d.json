{"ast":null,"code":"import _defineProperty from\"/Users/iashir/Desktop/WorkProjects/Recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/iashir/Desktop/WorkProjects/Recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/iashir/Desktop/WorkProjects/Recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/iashir/Desktop/WorkProjects/Recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/iashir/Desktop/WorkProjects/Recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Link}from\"react-router-dom\";import classnames from\"classnames\";import{showLoading}from\"./helper/loading\";import{register}from\"../api/auth\";import{isAuthenticated}from\"./helper/auth\";import Validator from\"validator\";var Register=/*#__PURE__*/function(_Component){_inherits(Register,_Component);var _super=_createSuper(Register);function Register(){var _this;_classCallCheck(this,Register);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={username:\"\",email:\"\",firstName:\"\",lastName:\"\",password:\"\",password2:\"\",errors:{},loading:false,successMessage:\"\"};_this.componentDidMount=function(){if(isAuthenticated()&&isAuthenticated().role===1){_this.props.history.push(\"/admin\");}else if(isAuthenticated()&&isAuthenticated().role===0){_this.props.history.push(\"/recipes\");}};_this.handleChange=function(e){var badInput=e.target.value;var value=badInput.replace(/  +/g,\" \");_this.setState(_defineProperty({},e.target.id,value));_this.validateField(e.target.id,value);};_this.handleSubmit=function(e){e.preventDefault();var _this$state=_this.state,username=_this$state.username,firstName=_this$state.firstName,lastName=_this$state.lastName,email=_this$state.email,password2=_this$state.password2,password=_this$state.password;var newUser={username:username.trim(),firstName:firstName.trim(),lastName:lastName.trim(),email:email.trim(),password:password.trim(),password2:password2.trim()};_this.setState({loading:true});register(newUser).then(function(res){_this.setState({loading:false,successMessage:res.data.successMessage});_this.props.history.push({pathname:\"/login\",state:{username:newUser.username,password:newUser.password}});})// re-direct to login on successful register\n.catch(function(err){_this.setState({errors:err.response.data,loading:false});});};_this.validateField=function(fieldName,value){var _this$state2=_this.state,errors=_this$state2.errors,password=_this$state2.password;var passwordRegEx=new RegExp(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$\");switch(fieldName){case\"username\":if(Validator.isEmpty(value)){errors.username=\"Username field is required\";break;}if(!Validator.isLength(value,{min:3,max:15})){errors.username=\"Username must be more than 3 and less than 15 characters\";break;}errors.username=\"\";break;case\"firstName\":if(Validator.isEmpty(value)){errors.firstName=\"First Name field is required\";break;}else if(!Validator.isAlpha(value)){errors.firstName=\"First Name must be letters only\";break;}errors.firstName=\"\";break;case\"lastName\":if(Validator.isEmpty(value)){errors.lastName=\"Last Name field is required\";break;}else if(!Validator.isAlpha(value)){errors.lastName=\"Last Name must be letters only\";break;}errors.lastName=\"\";break;case\"email\":if(Validator.isEmpty(value)){errors.email=\"Email field is required\";break;}else if(!Validator.isEmail(value)){errors.email=\"Email is invalid\";break;}errors.email=\"\";break;case\"password\":if(Validator.isEmpty(value)){errors.password=\"Password field is required\";break;}if(!Validator.isLength(value,{min:6,max:30})){errors.password=\"Password must be at least 6 and no more than 30 characters\";break;}else if(!passwordRegEx.test(value)){errors.password=\"Password must contain at least 1 uppercase, 1 lowercase, 1 numeric and 1 special character\";break;}errors.password=\"\";break;case\"password2\":if(Validator.isEmpty(value)){errors.password2=\"Confirm password field is required\";break;}if(!Validator.equals(password,value)){errors.password2=\"Passwords must match\";break;}errors.password2=\"\";break;default:break;}_this.setState({errors:errors});};return _this;}_createClass(Register,[{key:\"render\",value:function render(){var _this$state3=this.state,errors=_this$state3.errors,loading=_this$state3.loading;return/*#__PURE__*/React.createElement(React.Fragment,null,loading?showLoading():null,/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Register Form\")),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"form\",{className:\"col s12\",noValidate:true,onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-field col s12\"},/*#__PURE__*/React.createElement(\"input\",{id:\"username\",type:\"text\",onChange:this.handleChange,value:this.state.username,className:classnames(\"\",{invalid:errors.username})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"username\"},\"Username\"),/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.username))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-field col s6\"},/*#__PURE__*/React.createElement(\"input\",{id:\"firstName\",type:\"text\",onChange:this.handleChange,value:this.state.firstName,className:classnames(\"\",{invalid:errors.firstName})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"firstName\"},\"First Name\"),/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.firstName)),/*#__PURE__*/React.createElement(\"div\",{className:\"input-field col s6\"},/*#__PURE__*/React.createElement(\"input\",{id:\"lastName\",type:\"text\",onChange:this.handleChange,value:this.state.lastName,className:classnames(\"\",{invalid:errors.lastName})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"lastName\"},\"Last Name\"),/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.lastName))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-field col s12\"},/*#__PURE__*/React.createElement(\"input\",{id:\"email\",onChange:this.handleChange,value:this.state.email,type:\"email\",className:classnames(\"\",{invalid:errors.email})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.email))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-field col s12\"},/*#__PURE__*/React.createElement(\"input\",{id:\"password\",onChange:this.handleChange,value:this.state.password,type:\"password\",className:classnames(\"\",{invalid:errors.password})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.password))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-field col s12\"},/*#__PURE__*/React.createElement(\"input\",{id:\"password2\",onChange:this.handleChange,value:this.state.password2,type:\"password\",className:classnames(\"\",{invalid:errors.password2})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password2\"},\"Confirm Password\"),/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.password2))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},errors.errorMessage?/*#__PURE__*/React.createElement(\"div\",{className:\"card-panel deep-orange\"},errors.errorMessage):null),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn waves-effect waves-light\",type:\"submit\",name:\"action\"},\"Submit\"),/*#__PURE__*/React.createElement(Link,{to:\"/\",className:\"orange-effect orange btn\"},\"Cancel\"))))))));}}]);return Register;}(Component);export default Register;","map":{"version":3,"sources":["/Users/iashir/Desktop/WorkProjects/Recipe/client/src/components/register.jsx"],"names":["React","Component","Link","classnames","showLoading","register","isAuthenticated","Validator","Register","state","username","email","firstName","lastName","password","password2","errors","loading","successMessage","componentDidMount","role","props","history","push","handleChange","e","badInput","target","value","replace","setState","id","validateField","handleSubmit","preventDefault","newUser","trim","then","res","data","pathname","catch","err","response","fieldName","passwordRegEx","RegExp","isEmpty","isLength","min","max","isAlpha","isEmail","test","equals","invalid","errorMessage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { showLoading } from \"./helper/loading\";\nimport { register } from \"../api/auth\";\nimport { isAuthenticated } from \"./helper/auth\";\nimport Validator from \"validator\";\nclass Register extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\",\n    password2: \"\",\n    errors: {},\n    loading: false,\n    successMessage: \"\",\n  };\n  componentDidMount = () => {\n    if (isAuthenticated() && isAuthenticated().role === 1) {\n      this.props.history.push(\"/admin\");\n    } else if (isAuthenticated() && isAuthenticated().role === 0) {\n      this.props.history.push(\"/recipes\");\n    }\n  };\n  handleChange = (e) => {\n    const badInput = e.target.value;\n    var value = badInput.replace(/  +/g, \" \");\n    this.setState({ [e.target.id]: value });\n    this.validateField(e.target.id, value);\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let {\n      username,\n      firstName,\n      lastName,\n      email,\n      password2,\n      password,\n    } = this.state;\n    const newUser = {\n      username: username.trim(),\n      firstName: firstName.trim(),\n      lastName: lastName.trim(),\n      email: email.trim(),\n      password: password.trim(),\n      password2: password2.trim(),\n    };\n    this.setState({ loading: true });\n    register(newUser)\n      .then((res) => {\n        this.setState({\n          loading: false,\n          successMessage: res.data.successMessage,\n        });\n        this.props.history.push({\n          pathname: \"/login\",\n          state: {\n            username: newUser.username,\n            password: newUser.password,\n          },\n        });\n      }) // re-direct to login on successful register\n      .catch((err) => {\n        this.setState({\n          errors: err.response.data,\n          loading: false,\n        });\n      });\n  };\n\n  validateField = (fieldName, value) => {\n    let { errors, password } = this.state;\n    const passwordRegEx = new RegExp(\n      \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$\"\n    );\n    switch (fieldName) {\n      case \"username\":\n        if (Validator.isEmpty(value)) {\n          errors.username = \"Username field is required\";\n          break;\n        }\n        if (!Validator.isLength(value, { min: 3, max: 15 })) {\n          errors.username =\n            \"Username must be more than 3 and less than 15 characters\";\n          break;\n        }\n        errors.username = \"\";\n        break;\n      case \"firstName\":\n        if (Validator.isEmpty(value)) {\n          errors.firstName = \"First Name field is required\";\n          break;\n        } else if (!Validator.isAlpha(value)) {\n          errors.firstName = \"First Name must be letters only\";\n          break;\n        }\n        errors.firstName = \"\";\n        break;\n      case \"lastName\":\n        if (Validator.isEmpty(value)) {\n          errors.lastName = \"Last Name field is required\";\n          break;\n        } else if (!Validator.isAlpha(value)) {\n          errors.lastName = \"Last Name must be letters only\";\n          break;\n        }\n        errors.lastName = \"\";\n        break;\n      case \"email\":\n        if (Validator.isEmpty(value)) {\n          errors.email = \"Email field is required\";\n          break;\n        } else if (!Validator.isEmail(value)) {\n          errors.email = \"Email is invalid\";\n          break;\n        }\n        errors.email = \"\";\n        break;\n      case \"password\":\n        if (Validator.isEmpty(value)) {\n          errors.password = \"Password field is required\";\n          break;\n        }\n        if (!Validator.isLength(value, { min: 6, max: 30 })) {\n          errors.password =\n            \"Password must be at least 6 and no more than 30 characters\";\n          break;\n        } else if (!passwordRegEx.test(value)) {\n          errors.password =\n            \"Password must contain at least 1 uppercase, 1 lowercase, 1 numeric and 1 special character\";\n          break;\n        }\n        errors.password = \"\";\n        break;\n      case \"password2\":\n        if (Validator.isEmpty(value)) {\n          errors.password2 = \"Confirm password field is required\";\n          break;\n        }\n        if (!Validator.equals(password, value)) {\n          errors.password2 = \"Passwords must match\";\n          break;\n        }\n        errors.password2 = \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ errors });\n  };\n\n  render() {\n    const { errors, loading } = this.state;\n    return (\n      <React.Fragment>\n        {loading ? showLoading() : null}\n        <div className=\"container\">\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"row\">\n                <h3>Register Form</h3>\n              </div>\n\n              <div className=\"row\">\n                <form\n                  className=\"col s12\"\n                  noValidate\n                  onSubmit={this.handleSubmit}\n                >\n                  <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                      <input\n                        id=\"username\"\n                        type=\"text\"\n                        onChange={this.handleChange}\n                        value={this.state.username}\n                        className={classnames(\"\", {\n                          invalid: errors.username,\n                        })}\n                      />\n                      <label htmlFor=\"username\">Username</label>\n                      <span className=\"red-text\">{errors.username}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field col s6\">\n                      <input\n                        id=\"firstName\"\n                        type=\"text\"\n                        onChange={this.handleChange}\n                        value={this.state.firstName}\n                        className={classnames(\"\", {\n                          invalid: errors.firstName,\n                        })}\n                      />\n                      <label htmlFor=\"firstName\">First Name</label>\n                      <span className=\"red-text\">{errors.firstName}</span>\n                    </div>\n\n                    <div className=\"input-field col s6\">\n                      <input\n                        id=\"lastName\"\n                        type=\"text\"\n                        onChange={this.handleChange}\n                        value={this.state.lastName}\n                        className={classnames(\"\", {\n                          invalid: errors.lastName,\n                        })}\n                      />\n                      <label htmlFor=\"lastName\">Last Name</label>\n                      <span className=\"red-text\">{errors.lastName}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                      <input\n                        id=\"email\"\n                        onChange={this.handleChange}\n                        value={this.state.email}\n                        type=\"email\"\n                        className={classnames(\"\", {\n                          invalid: errors.email,\n                        })}\n                      />\n                      <label htmlFor=\"email\">Email</label>\n                      <span className=\"red-text\">{errors.email}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                      <input\n                        id=\"password\"\n                        onChange={this.handleChange}\n                        value={this.state.password}\n                        type=\"password\"\n                        className={classnames(\"\", {\n                          invalid: errors.password,\n                        })}\n                      />\n                      <label htmlFor=\"password\">Password</label>\n                      <span className=\"red-text\">{errors.password}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                      <input\n                        id=\"password2\"\n                        onChange={this.handleChange}\n                        value={this.state.password2}\n                        type=\"password\"\n                        className={classnames(\"\", {\n                          invalid: errors.password2,\n                        })}\n                      />\n                      <label htmlFor=\"password2\">Confirm Password</label>\n                      <span className=\"red-text\">{errors.password2}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    {errors.errorMessage ? (\n                      <div className=\"card-panel deep-orange\">\n                        {errors.errorMessage}\n                      </div>\n                    ) : null}\n                  </div>\n\n                  <div className=\"row\">\n                    <button\n                      className=\"btn waves-effect waves-light\"\n                      type=\"submit\"\n                      name=\"action\"\n                    >\n                      Submit\n                    </button>\n\n                    <Link to=\"/\" className=\"orange-effect orange btn\">\n                      Cancel\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}