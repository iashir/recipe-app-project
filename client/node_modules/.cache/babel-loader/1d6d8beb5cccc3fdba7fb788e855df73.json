{"ast":null,"code":"var _jsxFileName = \"/Users/iashir/Desktop/WorkProjects/Recipe/client/src/components/recipePage/sections/replyComments.jsx\";\nimport React from \"react\";\nimport { Comment } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport CommentInput from \"./commentInput\";\nimport LikeDislike from \"../../common/LikeDislike\";\n\nconst ReplyComments = ({\n  comment,\n  imageProf,\n  showReplyInput,\n  openReply,\n  replyId,\n  onSubmit,\n  onChange,\n  newReplyComment,\n  parentCommentId,\n  userId\n}) => {\n  return /*#__PURE__*/React.createElement(Comment.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Comment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n    src: comment.user.image ? comment.user.image : imageProf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Comment.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Author, {\n    as: Link,\n    to: \"/account/\" + comment.user._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, comment.user.username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, moment(comment.createdAt).format(\"LLLL\"))), /*#__PURE__*/React.createElement(Comment.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Author, {\n    as: Link,\n    to: \"/account/\" + comment.responseTo._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"@\" + comment.responseTo.username + \"  \"), comment.content), /*#__PURE__*/React.createElement(Comment.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LikeDislike, {\n    comment: true,\n    commentId: comment._id,\n    userId: localStorage.getItem(\"user\") ? userId : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Comment.Action, {\n    onClick: () => showReplyInput(comment._id, parentCommentId, comment.user._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Reply\"), openReply && replyId === comment._id ? /*#__PURE__*/React.createElement(CommentInput, {\n    onSubmit: onSubmit,\n    onChange: onChange,\n    value: newReplyComment,\n    name: \"newReplyComment\",\n    replyId: replyId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }) : null))));\n};\n\nexport default ReplyComments;","map":{"version":3,"sources":["/Users/iashir/Desktop/WorkProjects/Recipe/client/src/components/recipePage/sections/replyComments.jsx"],"names":["React","Comment","moment","Link","CommentInput","LikeDislike","ReplyComments","comment","imageProf","showReplyInput","openReply","replyId","onSubmit","onChange","newReplyComment","parentCommentId","userId","user","image","_id","username","createdAt","format","responseTo","content","localStorage","getItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Comment } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport CommentInput from \"./commentInput\";\nimport LikeDislike from \"../../common/LikeDislike\";\nconst ReplyComments = ({\n  comment,\n  imageProf,\n  showReplyInput,\n  openReply,\n  replyId,\n  onSubmit,\n  onChange,\n  newReplyComment,\n  parentCommentId,\n  userId,\n}) => {\n  return (\n    <Comment.Group>\n      <Comment>\n        <Comment.Avatar\n          src={comment.user.image ? comment.user.image : imageProf}\n        />\n        <Comment.Content>\n          <Comment.Author as={Link} to={\"/account/\" + comment.user._id}>\n            {comment.user.username}\n          </Comment.Author>\n          <Comment.Metadata>\n            <div>{moment(comment.createdAt).format(\"LLLL\")}</div>\n          </Comment.Metadata>\n          <Comment.Text>\n            <Comment.Author as={Link} to={\"/account/\" + comment.responseTo._id}>\n              {\"@\" + comment.responseTo.username + \"  \"}\n            </Comment.Author>\n            {comment.content}\n          </Comment.Text>\n          <Comment.Actions>\n            <LikeDislike\n              comment\n              commentId={comment._id}\n              userId={localStorage.getItem(\"user\") ? userId : null}\n            />\n            <Comment.Action\n              onClick={() =>\n                showReplyInput(comment._id, parentCommentId, comment.user._id)\n              }\n            >\n              Reply\n            </Comment.Action>\n            {openReply && replyId === comment._id ? (\n              <CommentInput\n                onSubmit={onSubmit}\n                onChange={onChange}\n                value={newReplyComment}\n                name=\"newReplyComment\"\n                replyId={replyId}\n              />\n            ) : null}\n          </Comment.Actions>\n        </Comment.Content>\n      </Comment>\n    </Comment.Group>\n  );\n};\n\nexport default ReplyComments;\n"]},"metadata":{},"sourceType":"module"}