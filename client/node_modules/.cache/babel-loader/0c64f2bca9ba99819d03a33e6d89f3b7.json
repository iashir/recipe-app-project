{"ast":null,"code":"import _defineProperty from\"/Users/iashir/Desktop/WorkProjects/Recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/iashir/Desktop/WorkProjects/Recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/iashir/Desktop/WorkProjects/Recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/iashir/Desktop/WorkProjects/Recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/iashir/Desktop/WorkProjects/Recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Link,withRouter}from\"react-router-dom\";import axios from\"axios\";import classnames from\"classnames\";import Validator from\"validator\";import M from\"materialize-css\";import{toast}from\"react-toastify\";import{showLoading}from\"./helper/loading\";var AddRecipe=/*#__PURE__*/function(_Component){_inherits(AddRecipe,_Component);var _super=_createSuper(AddRecipe);function AddRecipe(){var _this;_classCallCheck(this,AddRecipe);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={title:\"\",body:\"\",ingredients:\"\",category:\"\",status:\"\",user:{},errors:{},categories:[],loading:false,recipeImage:null};_this.componentDidMount=function(){_this.setState({loading:true});var _JSON$parse=JSON.parse(localStorage.user),_id=_JSON$parse._id;axios.get(\"/api/categories\").then(function(_ref){var categories=_ref.data;_this.setState({user:_id,status:\"public\",categories:categories,category:categories[0]._id,loading:false});M.AutoInit();});};_this.handleChange=function(event){if(event.target.id===\"recipeImage\"){_this.setState({recipeImage:event.target.files[0]});}else{_this.setState(_defineProperty({},event.target.id,event.target.value));_this.validateForm(event.target.id,event.target.value);}};_this.handleSubmit=function(event){event.preventDefault();_this.setState({loading:true});var _this$state=_this.state,title=_this$state.title,body=_this$state.body,status=_this$state.status,user=_this$state.user,recipeImage=_this$state.recipeImage,category=_this$state.category,ingredients=_this$state.ingredients;if(recipeImage){console.log(_this.state);var formData=new FormData();formData.append(\"recipeImage\",recipeImage,recipeImage.name);formData.append(\"title\",title);formData.append(\"status\",status);formData.append(\"category\",category);formData.append(\"user\",user);formData.append(\"body\",body.trim());formData.append(\"ingredients\",ingredients.trim());axios.post(\"/api/recipes/add\",formData,{headers:{accept:\"application/json\",\"Accept-Language\":\"en-US,en;q=0.8\",\"Content-Type\":\"multipart/form-data; boundary=\".concat(formData._boundary)}}).then(function(response){toast.success(\"success, \".concat(response.data,\" created\"),{position:\"bottom-center\",autoClose:5000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});_this.props.history.push(\"/my-recipes\");}).catch(function(error){_this.setState({errors:error.response.data,loading:false});});}else{_this.setState({errors:{recipeImage:\"No file selected\"},loading:false});}};return _this;}_createClass(AddRecipe,[{key:\"validateForm\",value:function validateForm(fieldName,value){var errors=this.state.errors;switch(fieldName){case\"title\":if(Validator.isEmpty(value)){errors.title=\"Title field is required\";break;}errors.title=\"\";break;case\"body\":if(Validator.isEmpty(value)){errors.body=\"Description field is required\";break;}errors.body=\"\";break;case\"ingredients\":if(Validator.isEmpty(value)){errors.ingredients=\"Ingredients field is required\";break;}errors.ingredients=\"\";break;default:break;}}},{key:\"render\",value:function render(){var _this$state2=this.state,title=_this$state2.title,body=_this$state2.body,errors=_this$state2.errors,status=_this$state2.status,loading=_this$state2.loading,categories=_this$state2.categories,category=_this$state2.category,ingredients=_this$state2.ingredients;return/*#__PURE__*/React.createElement(React.Fragment,null,loading?showLoading():null,/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.handleSubmit,noValidate:true,encType:\"multipart/form-data\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"file-field input-field\"},/*#__PURE__*/React.createElement(\"div\",{className:\"btn\"},/*#__PURE__*/React.createElement(\"span\",null,\"Select\"),/*#__PURE__*/React.createElement(\"input\",{name:\"recipeImage\",onChange:this.handleChange,type:\"file\",id:\"recipeImage\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"file-path-wrapper\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Recipe image(must be less than 5MB)\",className:classnames(\"file-path \",{invalid:errors.recipeImage})}),/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.recipeImage)))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-field\"},/*#__PURE__*/React.createElement(\"input\",{value:title,onChange:this.handleChange,type:\"text\",id:\"title\",name:\"title\",className:classnames(\"\",{invalid:errors.title})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"title\"},\"Title\"),/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.title))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-field\"},/*#__PURE__*/React.createElement(\"select\",{name:\"category\",id:\"category\",onChange:this.handleChange,value:category},categories.map(function(data){return/*#__PURE__*/React.createElement(\"option\",{key:data._id,value:data._id},data.type);})),/*#__PURE__*/React.createElement(\"label\",null,\"Choose category\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-field\"},/*#__PURE__*/React.createElement(\"select\",{name:\"status\",id:\"status\",onChange:this.handleChange,className:classnames(\"\",{invalid:errors.status}),value:status},/*#__PURE__*/React.createElement(\"option\",{value:\"public\"},\"Public\"),/*#__PURE__*/React.createElement(\"option\",{value:\"private\"},\"Private\")),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"status\"},\"Choose status of your recipe\"),/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.status))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-field\"},/*#__PURE__*/React.createElement(\"textarea\",{value:ingredients,onChange:this.handleChange,id:\"ingredients\",name:\"ingredients\",className:classnames(\"materialize-textarea\",{invalid:errors.ingredients})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"ingredients\"},\"ingredients\"),/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.ingredients))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-field\"},/*#__PURE__*/React.createElement(\"textarea\",{value:body,onChange:this.handleChange,id:\"body\",name:\"body\",className:classnames(\"materialize-textarea\",{invalid:errors.body})}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"body\"},\"Description\"),/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.body))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Save\",className:\"btn\"}),/*#__PURE__*/React.createElement(Link,{to:\"/recipes\",className:\"btn orange\"},\"Cancel\"))))))));}}]);return AddRecipe;}(Component);export default withRouter(AddRecipe);","map":{"version":3,"sources":["/Users/iashir/Desktop/WorkProjects/Recipe/client/src/components/addRecipe.jsx"],"names":["React","Component","Link","withRouter","axios","classnames","Validator","M","toast","showLoading","AddRecipe","state","title","body","ingredients","category","status","user","errors","categories","loading","recipeImage","componentDidMount","setState","JSON","parse","localStorage","_id","get","then","data","AutoInit","handleChange","event","target","id","files","value","validateForm","handleSubmit","preventDefault","console","log","formData","FormData","append","name","trim","post","headers","accept","_boundary","response","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","props","history","push","catch","error","fieldName","isEmpty","invalid","map","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport classnames from \"classnames\";\nimport Validator from \"validator\";\nimport M from \"materialize-css\";\nimport { toast } from \"react-toastify\";\nimport { showLoading } from \"./helper/loading\";\n\nclass AddRecipe extends Component {\n  state = {\n    title: \"\",\n    body: \"\",\n    ingredients: \"\",\n    category: \"\",\n    status: \"\",\n    user: {},\n    errors: {},\n    categories: [],\n    loading: false,\n    recipeImage: null,\n  };\n  componentDidMount = () => {\n    this.setState({ loading: true });\n    const { _id } = JSON.parse(localStorage.user);\n    axios.get(\"/api/categories\").then(({ data: categories }) => {\n      this.setState({\n        user: _id,\n        status: \"public\",\n        categories,\n        category: categories[0]._id,\n        loading: false,\n      });\n      M.AutoInit();\n    });\n  };\n\n  handleChange = (event) => {\n    if (event.target.id === \"recipeImage\") {\n      this.setState({\n        recipeImage: event.target.files[0],\n      });\n    } else {\n      this.setState({ [event.target.id]: event.target.value });\n      this.validateForm(event.target.id, event.target.value);\n    }\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const {\n      title,\n      body,\n      status,\n      user,\n      recipeImage,\n      category,\n      ingredients,\n    } = this.state;\n    if (recipeImage) {\n      console.log(this.state);\n      let formData = new FormData();\n      formData.append(\"recipeImage\", recipeImage, recipeImage.name);\n      formData.append(\"title\", title);\n      formData.append(\"status\", status);\n      formData.append(\"category\", category);\n      formData.append(\"user\", user);\n      formData.append(\"body\", body.trim());\n      formData.append(\"ingredients\", ingredients.trim());\n      axios\n        .post(\"/api/recipes/add\", formData, {\n          headers: {\n            accept: \"application/json\",\n            \"Accept-Language\": \"en-US,en;q=0.8\",\n            \"Content-Type\": `multipart/form-data; boundary=${formData._boundary}`,\n          },\n        })\n        .then((response) => {\n          toast.success(`success, ${response.data} created`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n          this.props.history.push(\"/my-recipes\");\n        })\n        .catch((error) => {\n          this.setState({ errors: error.response.data, loading: false });\n        });\n    } else {\n      this.setState({\n        errors: { recipeImage: \"No file selected\" },\n        loading: false,\n      });\n    }\n  };\n  validateForm(fieldName, value) {\n    const { errors } = this.state;\n    switch (fieldName) {\n      case \"title\":\n        if (Validator.isEmpty(value)) {\n          errors.title = \"Title field is required\";\n          break;\n        }\n        errors.title = \"\";\n        break;\n      case \"body\":\n        if (Validator.isEmpty(value)) {\n          errors.body = \"Description field is required\";\n          break;\n        }\n        errors.body = \"\";\n        break;\n      case \"ingredients\":\n        if (Validator.isEmpty(value)) {\n          errors.ingredients = \"Ingredients field is required\";\n          break;\n        }\n        errors.ingredients = \"\";\n        break;\n      default:\n        break;\n    }\n  }\n  render() {\n    const {\n      title,\n      body,\n      errors,\n      status,\n      loading,\n      categories,\n      category,\n      ingredients,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        {loading ? showLoading() : null}\n        <div className=\"container\">\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"row\">\n                <form\n                  onSubmit={this.handleSubmit}\n                  noValidate\n                  encType=\"multipart/form-data\"\n                >\n                  <div className=\"row\">\n                    <div className=\"file-field input-field\">\n                      <div className=\"btn\">\n                        <span>Select</span>\n                        <input\n                          name=\"recipeImage\"\n                          onChange={this.handleChange}\n                          type=\"file\"\n                          id=\"recipeImage\"\n                        />\n                      </div>\n                      <div className=\"file-path-wrapper\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Recipe image(must be less than 5MB)\"\n                          className={classnames(\"file-path \", {\n                            invalid: errors.recipeImage,\n                          })}\n                        />\n                        <span className=\"red-text\">{errors.recipeImage}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <input\n                        value={title}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                        id=\"title\"\n                        name=\"title\"\n                        className={classnames(\"\", {\n                          invalid: errors.title,\n                        })}\n                      />\n                      <label htmlFor=\"title\">Title</label>\n                      <span className=\"red-text\">{errors.title}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <select\n                        name=\"category\"\n                        id=\"category\"\n                        onChange={this.handleChange}\n                        value={category}\n                      >\n                        {categories.map((data) => (\n                          <option key={data._id} value={data._id}>\n                            {data.type}\n                          </option>\n                        ))}\n                      </select>\n                      <label>Choose category</label>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <select\n                        name=\"status\"\n                        id=\"status\"\n                        onChange={this.handleChange}\n                        className={classnames(\"\", {\n                          invalid: errors.status,\n                        })}\n                        value={status}\n                      >\n                        <option value=\"public\">Public</option>\n                        <option value=\"private\">Private</option>\n                      </select>\n                      <label htmlFor=\"status\">\n                        Choose status of your recipe\n                      </label>\n                      <span className=\"red-text\">{errors.status}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <textarea\n                        value={ingredients}\n                        onChange={this.handleChange}\n                        id=\"ingredients\"\n                        name=\"ingredients\"\n                        className={classnames(\"materialize-textarea\", {\n                          invalid: errors.ingredients,\n                        })}\n                      ></textarea>\n                      <label htmlFor=\"ingredients\">ingredients</label>\n                      <span className=\"red-text\">{errors.ingredients}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"input-field\">\n                      <textarea\n                        value={body}\n                        onChange={this.handleChange}\n                        id=\"body\"\n                        name=\"body\"\n                        className={classnames(\"materialize-textarea\", {\n                          invalid: errors.body,\n                        })}\n                      ></textarea>\n                      <label htmlFor=\"body\">Description</label>\n                      <span className=\"red-text\">{errors.body}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <input type=\"submit\" value=\"Save\" className=\"btn\" />\n                    <Link to=\"/recipes\" className=\"btn orange\">\n                      Cancel\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(AddRecipe);\n"]},"metadata":{},"sourceType":"module"}